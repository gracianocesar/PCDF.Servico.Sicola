// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using PCDF.Servico.Sicola.API.Data.Context;
using PCDF.Servico.Sicola.API.Data.Data.Sicola;
using System;

namespace PCDF.Servico.Sicola.API.Data.Context.Configurations
{
    public partial class TbResponsavelCadaverConfiguration : IEntityTypeConfiguration<TbResponsavelCadaver>
    {
        public void Configure(EntityTypeBuilder<TbResponsavelCadaver> entity)
        {
            entity.HasKey(e => e.CdResponsavel)
                .HasName("PK_aaarodrigo");

            entity.ToTable("tb_responsavel_cadaver", "dbo");

            entity.HasComment("Termo de responsabilidade pela retirada do corpo");

            entity.Property(e => e.CdResponsavel)
                .HasColumnName("cd_responsavel")
                .HasComment("Chave primaria autoincremental. Código do registro do termo de responsabilidade pela retirada do corpo");

            entity.Property(e => e.CdCidadeEnd)
                .HasColumnName("cd_cidade_end")
                .HasComment("Chave estrangeira na tabela tb_cidade. Código da cidade do endereço do responsável pela retirada do corpo");

            entity.Property(e => e.CdEstadoCivil)
                .HasColumnName("cd_estado_civil")
                .HasComment("Chave estrangeira na tabela tb_estado_civil. Código do estado civil da pessoa responsável pela retirada do corpo");

            entity.Property(e => e.CdIncluidor)
                .HasColumnName("cd_incluidor")
                .HasComment("Chave estrangeira na tabela tb_usuario. Código do usuário que incluiu o termo de responsabilidade");

            entity.Property(e => e.CdLaudo)
                .HasColumnName("cd_laudo")
                .HasComment("Chave estrangeira na tabela tb_laudo. Código do laudo ao qual pertence o cadáver objeto do termo de responsabilidade");

            entity.Property(e => e.CdNaturalidade)
                .HasColumnName("cd_naturalidade")
                .HasComment("Chave estrangeira na tabela tb_cidade. Código da cidade onde nasceu a pessoa responsável pela retirada do corpo");

            entity.Property(e => e.CdUfEnd)
                .HasColumnName("cd_uf_end")
                .HasComment("Chave estrangeira na tabela tb_estado. Código do estado da cidade do endereço do responsável pela retirada do corpo");

            entity.Property(e => e.CdUfNaturalidade)
                .HasColumnName("cd_uf_naturalidade")
                .HasComment("Chave estrangeira na tabela tb_estado. Código do estado onde se localiza a cidade onde nasceu o responsável pela retirada do corpo");

            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dt_inclusao")
                .HasComment("Data da inclusão do registro do termo de responsabilidade");

            entity.Property(e => e.DtTermo)
                .HasColumnType("datetime")
                .HasColumnName("dt_termo")
                .HasComment("Data da assinatura do termo de responsabilidade");

            entity.Property(e => e.Endereco)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("endereco")
                .HasComment("Endereço do responsável pela retirada do corpo");

            entity.Property(e => e.Endereco1)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("endereco1")
                .HasComment("Endereço da primeira testemunha");

            entity.Property(e => e.Endereco2)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("endereco2")
                .HasComment("Endereço da segunda testemunha");

            entity.Property(e => e.Endereco3)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("endereco3")
                .HasComment("Endereço da terceira testemunha");

            entity.Property(e => e.Expedidor)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("expedidor")
                .HasComment("Órgão emissor do documento de identidade do responsável pela retirada do corpo");

            entity.Property(e => e.Fone1)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("fone1")
                .HasComment("Número do telefone da primeira testemunha");

            entity.Property(e => e.Fone2)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("fone2")
                .HasComment("Número do telefone da segunda testemunha");

            entity.Property(e => e.Fone3)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("fone3")
                .HasComment("Número do telefone da terceira testemunha");

            entity.Property(e => e.HrInclusao)
                .HasColumnType("datetime")
                .HasColumnName("hr_inclusao")
                .HasComment("Hora da inclusão do registro do termo de responsabilidade");

            entity.Property(e => e.NmMae)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("nm_mae")
                .HasComment("Nome da mãe da pessoa responsável pela retirada do corpo do IML");

            entity.Property(e => e.NmPai)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("nm_pai")
                .HasComment("Nome do pai da pessoa responsável pela retirada do corpo do IML");

            entity.Property(e => e.NmResponsavel)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("nm_responsavel")
                .HasComment("Nome da pessoa que está se responsabilizando pela retirada do corpo para sepultamento");

            entity.Property(e => e.Rg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("rg")
                .HasComment("Número do RG do responsável pela retirada do corpo");

            entity.Property(e => e.Rg1)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("rg1")
                .HasComment("Número do RG da primeira testemunha");

            entity.Property(e => e.Rg2)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("rg2")
                .HasComment("Número do RG da segunda testemunha");

            entity.Property(e => e.Rg3)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("rg3")
                .HasComment("Número do RG da terceira testemunha");

            entity.Property(e => e.Testemunha1)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("testemunha1")
                .HasComment("Nome da primeira testemunha do termo de responsabilidade");

            entity.Property(e => e.Testemunha2)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("testemunha2")
                .HasComment("Nome da segunda testemunha do termo de responsabilidade");

            entity.Property(e => e.Testemunha3)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("testemunha3")
                .HasComment("Nome da terceira testemunha do termo de responsabilidade");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<TbResponsavelCadaver> entity);
    }
}
