// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using PCDF.Servico.Sicola.API.Data.Context;
using PCDF.Servico.Sicola.API.Data.Data.Sicola;
using System;

namespace PCDF.Servico.Sicola.API.Data.Context.Configurations
{
    public partial class TbRadiologicoConfiguration : IEntityTypeConfiguration<TbRadiologico>
    {
        public void Configure(EntityTypeBuilder<TbRadiologico> entity)
        {
            entity.HasKey(e => e.CdRadiologico);

            entity.ToTable("tb_radiologico", "dbo");

            entity.HasComment("Pedidos de exame radiológico. Este recurso não é utilizado desde 2009.");

            entity.Property(e => e.CdRadiologico)
                .HasColumnName("cd_radiologico")
                .HasComment("Chave primaria autoincremental. Código do registro do pedido de exame radiológico feito pelo legista");

            entity.Property(e => e.Cancelado)
                .HasColumnName("cancelado")
                .HasComment("Informa se o pedido de exame radiológico foi cancelado");

            entity.Property(e => e.CdLaudo)
                .HasColumnName("cd_laudo")
                .HasComment("Chave estrangeira na tabela tb_laudo. Código do laudo cujo exame radiológico foi solicitado");

            entity.Property(e => e.CdPeritoRadio)
                .HasColumnName("cd_perito_radio")
                .HasComment("Chave estrangeira na tabela tb_usuario. Código do usuário da radiologia responsável pelo resultado");

            entity.Property(e => e.CdSolicitante)
                .HasColumnName("cd_solicitante")
                .HasComment("Chave estrangeira na tabela tb_usuario. Código do usuário (legista) que solicitou o exame radiológico");

            entity.Property(e => e.DtArquivado)
                .HasColumnType("datetime")
                .HasColumnName("dt_arquivado")
                .HasComment("Data do arquivamento do resultado pelo legista solicitante");

            entity.Property(e => e.DtHomologacao)
                .HasColumnType("datetime")
                .HasColumnName("dt_homologacao")
                .HasComment("Data do recebimento do resultado do exame radiológico pelo legista do laudo");

            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dt_inicio")
                .HasComment("Data do início do exame radiológico");

            entity.Property(e => e.DtSolicitacao)
                .HasColumnType("datetime")
                .HasColumnName("dt_solicitacao")
                .HasComment("Data da solicitação do exame radiológico");

            entity.Property(e => e.DtTermino)
                .HasColumnType("datetime")
                .HasColumnName("dt_termino")
                .HasComment("Data do término do exame radiológico");

            entity.Property(e => e.Pedido)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("pedido")
                .HasComment("Informações adicionais do legista para a radiologia");

            entity.Property(e => e.Resposta)
                .HasMaxLength(2000)
                .IsUnicode(false)
                .HasColumnName("resposta")
                .HasComment("Resultado do exame radiológico");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<TbRadiologico> entity);
    }
}
