// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using PCDF.Servico.Sicola.API.Data.Context;
using PCDF.Servico.Sicola.API.Data.Data.Sicola;
using System;

namespace PCDF.Servico.Sicola.API.Data.Context.Configurations
{
    public partial class TbDirecaoConfiguration : IEntityTypeConfiguration<TbDirecao>
    {
        public void Configure(EntityTypeBuilder<TbDirecao> entity)
        {
            entity.HasKey(e => e.CdDiretor);

            entity.ToTable("tb_direcao", "dbo");

            entity.HasComment("Cadastro de diretores do IML para impressão nos documentos (laudos, relatórios ou SVO)");

            entity.Property(e => e.CdDiretor)
                .HasColumnName("cd_diretor")
                .HasComment("Chave primaria autoincremental. Código do registro do diretor na tabela");

            entity.Property(e => e.ArquivoChancela)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("arquivo_chancela")
                .HasComment("Nome do arquivo JPG que está na pasta IMAGES correspondente á assinatura do diretor");

            entity.Property(e => e.Cabecalho)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("cabecalho")
                .HasComment("Texto formatado (HTML) para impressão no topo dos documentos (laudos, relatórios e SVO)");

            entity.Property(e => e.Cidade)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("cidade")
                .HasComment("Nome da cidade onde fica o órgão cujo usuário é diretor. Seria usado para o caso de outros institutos utilizassem o SICOLA para fazer laudos");

            entity.Property(e => e.DtFinal)
                .HasColumnType("datetime")
                .HasColumnName("dt_final")
                .HasComment("Data final da gestão do diretor do IML");

            entity.Property(e => e.DtInicio)
                .HasColumnType("datetime")
                .HasColumnName("dt_inicio")
                .HasComment("Data inicial da gestão do diretor do IML");

            entity.Property(e => e.Logotipo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("logotipo")
                .HasComment("Nome do arquivo JPG com a logo da instituição, o arquivo fica na pasta IMAGES");

            entity.Property(e => e.MtDiretor)
                .HasMaxLength(9)
                .IsUnicode(false)
                .HasColumnName("mt_diretor")
                .HasComment("Matrícula funcional do diretor do IML");

            entity.Property(e => e.NmDiretor)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("nm_diretor")
                .HasComment("Nome do diretor do IML");

            entity.Property(e => e.NmInstituicao)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("nm_instituicao")
                .HasComment("Nome da instituição policial (PCDF) a qual pertence o órgão(IML). Seria usado para o caso de outros institutos utilizassem o SICOLA para fazer laudos");

            entity.Property(e => e.NmOrgao)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("nm_orgao")
                .HasComment("Nome do órgão cujo usuário é diretor. Seria usado para o caso de outros institutos utilizassem o SICOLA para fazer laudos");

            entity.Property(e => e.Tratamento)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("tratamento")
                .HasComment("Abreviatura do tratamento formal do diretor(a)");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<TbDirecao> entity);
    }
}
