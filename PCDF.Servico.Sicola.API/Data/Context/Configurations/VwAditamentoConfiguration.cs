// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using PCDF.Servico.Sicola.API.Data.Context;
using PCDF.Servico.Sicola.API.Data.Data.Sicola;
using System;

namespace PCDF.Servico.Sicola.API.Data.Context.Configurations
{
    public partial class VwAditamentoConfiguration : IEntityTypeConfiguration<VwAditamento>
    {
        public void Configure(EntityTypeBuilder<VwAditamento> entity)
        {
            entity.HasNoKey();

            entity.ToView("vw_aditamento", "dbo");

            entity.HasComment("Aditamentos de laudos e relatórios");

            entity.Property(e => e.Administrativo).HasColumnName("administrativo");

            entity.Property(e => e.AnoLaudo).HasColumnName("ano_laudo");

            entity.Property(e => e.AnoProtocolo).HasColumnName("ano_protocolo");

            entity.Property(e => e.Cancelado).HasColumnName("cancelado");

            entity.Property(e => e.CdAditamento).HasColumnName("cd_aditamento");

            entity.Property(e => e.CdArquivador).HasColumnName("cd_arquivador");

            entity.Property(e => e.CdDestinatario).HasColumnName("cd_destinatario");

            entity.Property(e => e.CdHomologador).HasColumnName("cd_homologador");

            entity.Property(e => e.CdIncluidor).HasColumnName("cd_incluidor");

            entity.Property(e => e.CdLaudo).HasColumnName("cd_laudo");

            entity.Property(e => e.CdPerito1).HasColumnName("cd_perito1");

            entity.Property(e => e.CdPerito2).HasColumnName("cd_perito2");

            entity.Property(e => e.DtArquivado)
                .HasColumnType("datetime")
                .HasColumnName("dt_arquivado");

            entity.Property(e => e.DtAssinatura)
                .HasColumnType("datetime")
                .HasColumnName("dt_assinatura");

            entity.Property(e => e.DtHomologado)
                .HasColumnType("datetime")
                .HasColumnName("dt_homologado");

            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dt_inclusao");

            entity.Property(e => e.HrArquivado)
                .HasColumnType("datetime")
                .HasColumnName("hr_arquivado");

            entity.Property(e => e.HrAssinatura)
                .HasColumnType("datetime")
                .HasColumnName("hr_assinatura");

            entity.Property(e => e.HrHomologado)
                .HasColumnType("datetime")
                .HasColumnName("hr_homologado");

            entity.Property(e => e.HrInclusao)
                .HasColumnType("datetime")
                .HasColumnName("hr_inclusao");

            entity.Property(e => e.MatriculaPerito1)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("matricula_perito1");

            entity.Property(e => e.MatriculaPerito2)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("matricula_perito2");

            entity.Property(e => e.MtIncluidor)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("mt_incluidor");

            entity.Property(e => e.NmArquivador)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("nm_arquivador");

            entity.Property(e => e.NmDestinatario)
                .HasMaxLength(80)
                .IsUnicode(false)
                .HasColumnName("nm_destinatario");

            entity.Property(e => e.NmDocumento)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nm_documento");

            entity.Property(e => e.NmHomologador)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("nm_homologador");

            entity.Property(e => e.NmIncluidor)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("nm_incluidor");

            entity.Property(e => e.NmOrgao)
                .HasMaxLength(80)
                .IsUnicode(false)
                .HasColumnName("nm_orgao");

            entity.Property(e => e.NmPericiando)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("nm_periciando");

            entity.Property(e => e.NmPerito1)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("nm_perito1");

            entity.Property(e => e.NmPerito2)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("nm_perito2");

            entity.Property(e => e.NmTpLaudo)
                .HasMaxLength(80)
                .IsUnicode(false)
                .HasColumnName("nm_tp_laudo");

            entity.Property(e => e.NrConselho1)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nr_conselho1");

            entity.Property(e => e.NrConselho2)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nr_conselho2");

            entity.Property(e => e.NrDocumento)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nr_documento");

            entity.Property(e => e.NrLaudo).HasColumnName("nr_laudo");

            entity.Property(e => e.NrProtocolo).HasColumnName("nr_protocolo");

            entity.Property(e => e.QtFotos).HasColumnName("qt_fotos");

            entity.Property(e => e.SiglaConselho1)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("sigla_conselho1");

            entity.Property(e => e.SiglaConselho2)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("sigla_conselho2");

            entity.Property(e => e.Texto)
                .HasColumnType("text")
                .HasColumnName("texto");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<VwAditamento> entity);
    }
}
