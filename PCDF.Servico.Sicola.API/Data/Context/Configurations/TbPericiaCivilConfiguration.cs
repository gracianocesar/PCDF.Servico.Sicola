// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using PCDF.Servico.Sicola.API.Data.Context;
using PCDF.Servico.Sicola.API.Data.Data.Sicola;
using System;

namespace PCDF.Servico.Sicola.API.Data.Context.Configurations
{
    public partial class TbPericiaCivilConfiguration : IEntityTypeConfiguration<TbPericiaCivil>
    {
        public void Configure(EntityTypeBuilder<TbPericiaCivil> entity)
        {
            entity.HasKey(e => e.CdPericiaCivil);

            entity.ToTable("tb_pericia_civil", "dbo");

            entity.HasComment("Cadastro de agendamento de perícias cíveis solicitadas ao IML");

            entity.Property(e => e.CdPericiaCivil)
                .HasColumnName("cd_pericia_civil")
                .HasComment("Chave primaria autoincremental. Código do registro do agendamento de uma perícia civil");

            entity.Property(e => e.AnoDocumento)
                .HasColumnName("ano_documento")
                .HasComment("Ano do documento que solicitou a perícia");

            entity.Property(e => e.AnoProtocolo)
                .HasColumnName("ano_protocolo")
                .HasComment("Ano do protocolo da PCDF");

            entity.Property(e => e.CdExcluidor)
                .HasColumnName("cd_excluidor")
                .HasComment("Chave estrangeira na tabela tb_usuario. Código do usuário que excluiu o agendamento da perícia");

            entity.Property(e => e.CdIncluidor)
                .HasColumnName("cd_incluidor")
                .HasComment("Chave estrangeira na tabela tb_usuario. Código do usuário que incluiu o agendamento da perícia");

            entity.Property(e => e.CdOrgaoDocumento)
                .HasColumnName("cd_orgao_documento")
                .HasComment("Chave estrangeira na tabela tb_orgao. Código do órgão emissor do documento que solicitou a perícia");

            entity.Property(e => e.CdOrgaoProtocolo)
                .HasColumnName("cd_orgao_protocolo")
                .HasComment("Chave estrangeira na tabela tb_orgao. Código do órgão do protocolo");

            entity.Property(e => e.CdPerito)
                .HasColumnName("cd_perito")
                .HasComment("Chave estrangeira na tabela tb_usuario. Código do legista que irá realizar a perícia");

            entity.Property(e => e.CdTpDocumento)
                .HasColumnName("cd_tp_documento")
                .HasComment("Chave estrangeira na tabela tb_tp_documento. Código do tipo de documento que solicitou a perícia");

            entity.Property(e => e.DtExclusao)
                .HasColumnType("datetime")
                .HasColumnName("dt_exclusao")
                .HasComment("Data da exclusão do agendamento da perícia");

            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dt_inclusao")
                .HasComment("Data da inclusão do agendamento da perícia");

            entity.Property(e => e.DtPericia)
                .HasColumnType("datetime")
                .HasColumnName("dt_pericia")
                .HasComment("Data da perícia");

            entity.Property(e => e.NmPericiando)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("nm_periciando")
                .HasComment("Nome do periciando que será examinado");

            entity.Property(e => e.NrDocumento)
                .HasColumnName("nr_documento")
                .HasComment("Número do documento que solicitou a perícia");

            entity.Property(e => e.NrProtocolo)
                .HasColumnName("nr_protocolo")
                .HasComment("Número do protocolo da PCDF que originou o pedido da perícia cívil");

            entity.Property(e => e.Obs)
                .HasColumnType("text")
                .HasColumnName("obs")
                .HasComment("Informações complementares sobre a perícia civil agendada");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<TbPericiaCivil> entity);
    }
}
