// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using PCDF.Servico.Sicola.API.Data.Context;
using PCDF.Servico.Sicola.API.Data.Data.Sicola;
using System;

namespace PCDF.Servico.Sicola.API.Data.Context.Configurations
{
    public partial class TbPeConfiguration : IEntityTypeConfiguration<TbPe>
    {
        public void Configure(EntityTypeBuilder<TbPe> entity)
        {
            entity.HasKey(e => e.CdPe);

            entity.ToTable("tb_pe", "dbo");

            entity.HasComment("Perícias indiretas realizadas no IML. As perícias indiretas não são feitas na pessoa, normalmente é feita em prontuários médicos.");

            entity.Property(e => e.CdPe)
                .HasColumnName("cd_pe")
                .HasComment("Chave primaria autoincremental. Código do registro da perícia indireta");

            entity.Property(e => e.AnoProtocolo)
                .HasColumnName("ano_protocolo")
                .HasComment("Número do ano do protocolo da PCDF referente ao documento que originou a perícia indireta");

            entity.Property(e => e.CdExcluidor)
                .HasColumnName("cd_excluidor")
                .HasComment("Chave estrangeira na tabela tb_usuario. Código do usuário que excluiu o registro da perícia indireta");

            entity.Property(e => e.CdHospital)
                .HasColumnName("cd_hospital")
                .HasComment("Chave estrangeira na tabela tb_hospital. Código do hospital onde está o prontuário médico. Deixou de ser usado em 2013");

            entity.Property(e => e.CdIncluidor)
                .HasColumnName("cd_incluidor")
                .HasComment("Chave estrangeira na tabela tb_usuario. Código do usuário que incluiu o registro da perícia indireta");

            entity.Property(e => e.CdLaudo)
                .HasColumnName("cd_laudo")
                .HasComment("Chave estrangeira na tabela tb_laudo. Código do laudo vinculado à perícia indireta");

            entity.Property(e => e.CdOrgaoProtocolo)
                .HasColumnName("cd_orgao_protocolo")
                .HasComment("Chave estrangeira na tabela tb_orgao. Código do órgão que originou o protocolo");

            entity.Property(e => e.CdPerito)
                .HasColumnName("cd_perito")
                .HasComment("Chave estrangeira na tabela tb_usuario. Código do usuário responsável por fazer a perícia indireta (legista)");

            entity.Property(e => e.CdTpDoc)
                .HasColumnName("cd_tp_doc")
                .HasComment("Chave estrangeira na tabela tb_tp_documento. Código do tipo de documento que originou a perícia indireta");

            entity.Property(e => e.DtDevolucao)
                .HasColumnType("datetime")
                .HasColumnName("dt_devolucao")
                .HasComment("Data da devolução da documentação pelo legista");

            entity.Property(e => e.DtDoc)
                .HasColumnType("datetime")
                .HasColumnName("dt_doc")
                .HasComment("Data do documento que originou a perícia indireta");

            entity.Property(e => e.DtEncaminhamento)
                .HasColumnType("datetime")
                .HasColumnName("dt_encaminhamento")
                .HasComment("Data do encaminhamento da documentação para o legista");

            entity.Property(e => e.DtExclusao)
                .HasColumnType("datetime")
                .HasColumnName("dt_exclusao")
                .HasComment("Data da exclusão da perícia indireta");

            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dt_inclusao")
                .HasComment("Data da inclusão da perícia indireta");

            entity.Property(e => e.DtRecebimento)
                .HasColumnType("datetime")
                .HasColumnName("dt_recebimento")
                .HasComment("Data do recebimento do documento que originou a perícia indireta");

            entity.Property(e => e.NmHospital)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("nm_hospital")
                .HasComment("Nome do hospital onde está o prontuário médico");

            entity.Property(e => e.NmPericiando)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("nm_periciando")
                .HasComment("Nome do periciando dono do prontuário objeto da perícia indireta");

            entity.Property(e => e.NrDoc)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("nr_doc")
                .HasComment("Número do documento que originou a perícia indireta");

            entity.Property(e => e.NrProtocolo)
                .HasColumnName("nr_protocolo")
                .HasComment("Número do protocolo da PCDF referente ao documento que originou a perícia indireta");

            entity.Property(e => e.Obs)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("obs")
                .HasComment("Anotações importantes sobre a perícia indireta");

            entity.Property(e => e.SemLaudo)
                .HasColumnName("sem_laudo")
                .HasComment("Informa se a perícia indireta deu origem a um novo laudo");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<TbPe> entity);
    }
}
