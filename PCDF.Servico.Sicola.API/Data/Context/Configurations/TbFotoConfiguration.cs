// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using PCDF.Servico.Sicola.API.Data.Context;
using PCDF.Servico.Sicola.API.Data.Data.Sicola;
using System;

namespace PCDF.Servico.Sicola.API.Data.Context.Configurations
{
    public partial class TbFotoConfiguration : IEntityTypeConfiguration<TbFoto>
    {
        public void Configure(EntityTypeBuilder<TbFoto> entity)
        {
            entity.HasKey(e => e.CdFoto);

            entity.ToTable("tb_foto", "dbo");

            entity.HasComment("Fotografias JPG dos laudos, enviadas para o servidor e possível impressão no laudo ou aditamento");

            entity.Property(e => e.CdFoto)
                .HasColumnName("cd_foto")
                .HasComment("Chave primaria autoincremental. Código do registro da foto enviada para o servidor de arquivos");

            entity.Property(e => e.CdAssociador)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cd_associador");

            entity.Property(e => e.CdIncluidor)
                .HasColumnName("cd_incluidor")
                .HasComment("Chave estrangeira na tabela tb_usuario. Código do usuário incluidor do registro (quem fez o upload da foto)");

            entity.Property(e => e.CdLaudo)
                .HasColumnName("cd_laudo")
                .HasComment("Chave estrangeira na tabela tb_laudo. Código do documento (laudo) ao qual a fotografia está vinculada.");

            entity.Property(e => e.DtAssociada)
                .HasColumnType("datetime")
                .HasColumnName("dt_associada");

            entity.Property(e => e.DtImprimir)
                .HasColumnType("datetime")
                .HasColumnName("dt_imprimir")
                .HasComment("Este campo deixou de ser utilizado em 27/05/2009 devido a adaptações no SICOLA");

            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dt_inclusao")
                .HasComment("Data do envio da foto JPG");

            entity.Property(e => e.DtUpdateFilesystem)
                .HasColumnType("datetime")
                .HasColumnName("dt_update_filesystem");

            entity.Property(e => e.Excluido)
                .HasColumnName("excluido")
                .HasComment("Informa se o registro da fotografia enviada foi excluído (a fotografia nunca é excluída do HD)");

            entity.Property(e => e.Imagem).HasColumnName("imagem");

            entity.Property(e => e.Legenda)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("legenda")
                .HasComment("Descrição feita pelo legista sobre o conteúdo da fotografia");

            entity.Property(e => e.NmArquivo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nm_arquivo")
                .HasComment("Nome do arquivo JPG da foto enviada");

            entity.Property(e => e.Ordem)
                .HasColumnName("ordem")
                .HasComment("Número de ordem de impressão da foto no laudo ou aditamento");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<TbFoto> entity);
    }
}
