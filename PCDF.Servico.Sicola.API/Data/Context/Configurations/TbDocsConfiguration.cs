// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using PCDF.Servico.Sicola.API.Data.Context;
using PCDF.Servico.Sicola.API.Data.Data.Sicola;
using System;

namespace PCDF.Servico.Sicola.API.Data.Context.Configurations
{
    public partial class TbDocsConfiguration : IEntityTypeConfiguration<TbDocs>
    {
        public void Configure(EntityTypeBuilder<TbDocs> entity)
        {
            entity.HasKey(e => e.CdDocs);

            entity.ToTable("tb_docs", "dbo");

            entity.HasComment("Documentos entregues (e devolvidos) aos peritos. Memorandos, ofícios, processos, etc. Aparentemente nunca foi utilizado pela seção de Arquivo e Protocolo.");

            entity.Property(e => e.CdDocs)
                .HasColumnName("cd_docs")
                .HasComment("Chave primaria autoincremental. Código do registro do documento cadastrado e encaminhado do legista ou outro servidor do IML");

            entity.Property(e => e.AnoProtocolo)
                .HasColumnName("ano_protocolo")
                .HasComment("Ano do protocolo da PCDF no documento encaminhado");

            entity.Property(e => e.CdExcluidor)
                .HasColumnName("cd_excluidor")
                .HasComment("Chave estrangeira na tabela tb_usuario. Código do usuário que excluiu o registro do documento");

            entity.Property(e => e.CdIncluidor)
                .HasColumnName("cd_incluidor")
                .HasComment("Chave estrangeira na tabela tb_usuario. Código do usuário da SAPE que incluiu o registro do documento");

            entity.Property(e => e.CdOrgao)
                .HasColumnName("cd_orgao")
                .HasComment("Chave estrangeira na tabela tb_orgao. Código do órgão emissor do documento cadastrado e encaminhado.");

            entity.Property(e => e.CdServidor)
                .HasColumnName("cd_servidor")
                .HasComment("Chave estrangeira na tabela tb_usuario. Código do usuário que está recebendo o documento.");

            entity.Property(e => e.CdTpDocumento)
                .HasColumnName("cd_tp_documento")
                .HasComment("Chave estrangeira na tabela tb_tp_documento. Código do tipo de documento cadastrado");

            entity.Property(e => e.DtEntrega)
                .HasColumnType("datetime")
                .HasColumnName("dt_entrega")
                .HasComment("Data da entrega do documento para o legista (ou outro usuário)");

            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dt_inclusao")
                .HasComment("Data da inclusão do registro de documento a ser encaminhado");

            entity.Property(e => e.DtPrazo)
                .HasColumnType("datetime")
                .HasColumnName("dt_prazo")
                .HasComment("Data limite para que o documento seja devolvido à SAPE");

            entity.Property(e => e.DtRetorno)
                .HasColumnType("datetime")
                .HasColumnName("dt_retorno")
                .HasComment("Data da devolução do documento à SAPE");

            entity.Property(e => e.Excluido)
                .HasColumnName("excluido")
                .HasComment("Informa se o registro foi excluído");

            entity.Property(e => e.NmTipo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nm_tipo")
                .HasComment("Descrição do tipo de documento (CIVIL ou CRIMINAL)");

            entity.Property(e => e.NrDocumento)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nr_documento")
                .HasComment("Número do documento cadastrado e encaminhado pela SAPE ao legista.");

            entity.Property(e => e.NrProtocolo)
                .HasColumnName("nr_protocolo")
                .HasComment("Número do protocolo da PCDF no documento encaminhado");

            entity.Property(e => e.Obs)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("obs")
                .HasComment("Informações adicionais sobre o documento ou a tramitação do mesmo");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<TbDocs> entity);
    }
}
