// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using PCDF.Servico.Sicola.API.Data.Context;
using PCDF.Servico.Sicola.API.Data.Data.Sicola;
using System;

namespace PCDF.Servico.Sicola.API.Data.Context.Configurations
{
    public partial class TbPscExameConfiguration : IEntityTypeConfiguration<TbPscExame>
    {
        public void Configure(EntityTypeBuilder<TbPscExame> entity)
        {
            entity.HasKey(e => e.CdExame);

            entity.ToTable("tb_psc_exame", "dbo");

            entity.HasComment("Agendamento de exames psicopatológicos de um paciente");

            entity.Property(e => e.CdExame)
                .HasColumnName("cd_exame")
                .HasComment("Chave primaria autoincremental. Código do registro do agendamento de um exame psicopatológico");

            entity.Property(e => e.AnoProtocolo)
                .HasColumnName("ano_protocolo")
                .HasComment("Ano do protocolo da PCDF para a devolução da documentação");

            entity.Property(e => e.CdExcluidor)
                .HasColumnName("cd_excluidor")
                .HasComment("Chave estrangeira na tabela tb_usuario. Código do usuário que excluiu o agendamento do exame psicopatológico");

            entity.Property(e => e.CdIncluidor)
                .HasColumnName("cd_incluidor")
                .HasComment("Chave estrangeira na tabela tb_usuario. Código do usuário que está criando o agendamento do exame psicopatológico");

            entity.Property(e => e.CdLaudo)
                .HasColumnName("cd_laudo")
                .HasComment("Chave estrangeira na tabela tb_laudo. Código do laudo originado a partir do exame psicopatológico");

            entity.Property(e => e.CdOrgaoDocumento)
                .HasColumnName("cd_orgao_documento")
                .HasComment("Chave estrangeira na tabela tb_orgao. Código do órgão emissor do documento que solicitou o exame");

            entity.Property(e => e.CdPaciente)
                .HasColumnName("cd_paciente")
                .HasComment("Chave estrangeira na tabela tb_psc_paciente. Código do paciente que está sendo agendado");

            entity.Property(e => e.CdPerito)
                .HasColumnName("cd_perito")
                .HasComment("Chave estrangeira na tabela tb_usuario. Código do usuário que fará o exame psicopatológico");

            entity.Property(e => e.CdTpDocumento)
                .HasColumnName("cd_tp_documento")
                .HasComment("Chave estrangeira na tabela tb_tp_documento. Código do tipo de documento que solicitou o exame no periciando");

            entity.Property(e => e.DocDevolvido)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("doc_devolvido")
                .HasComment("Número do documento gerado para a devolução da documentação pelo IML");

            entity.Property(e => e.DtDevolvido)
                .HasColumnType("datetime")
                .HasColumnName("dt_devolvido")
                .HasComment("Data da devolução da documentação pelo servidor responsável pelo exame psicopatológico");

            entity.Property(e => e.DtDocumento)
                .HasColumnType("datetime")
                .HasColumnName("dt_documento")
                .HasComment("Data do documento que solicitou o exame psicopatológico");

            entity.Property(e => e.DtExame)
                .HasColumnType("datetime")
                .HasColumnName("dt_exame")
                .HasComment("Data do exame agendado");

            entity.Property(e => e.DtExclusao)
                .HasColumnType("datetime")
                .HasColumnName("dt_exclusao")
                .HasComment("Data da exclusão do agendamento do exame psicopatológico");

            entity.Property(e => e.DtInclusao)
                .HasColumnType("datetime")
                .HasColumnName("dt_inclusao")
                .HasComment("Data da inclusão do agendamento");

            entity.Property(e => e.DtRecebidoDoc)
                .HasColumnType("datetime")
                .HasColumnName("dt_recebido_doc")
                .HasComment("Data do recebimento, pelo IML, do documento que solicitou o exame psicopatológico");

            entity.Property(e => e.Faltou)
                .HasColumnName("faltou")
                .HasComment("Informa se o periciando faltou ao exame agendado");

            entity.Property(e => e.NrDocumento)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nr_documento")
                .HasComment("Número do documento que solicitou o exame no periciando");

            entity.Property(e => e.NrProtocolo)
                .HasColumnName("nr_protocolo")
                .HasComment("Número do protocolo da PCDF para a devolução da documentação");

            entity.Property(e => e.TipoExame)
                .HasColumnName("tipo_exame")
                .HasComment("Tipo do exame realizado: 1 = psicológico e 2 = psiquiátrico");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<TbPscExame> entity);
    }
}
